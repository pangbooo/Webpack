{
  "_args": [
    [
      {
        "raw": "uglifyjs-webpack-plugin",
        "scope": null,
        "escapedName": "uglifyjs-webpack-plugin",
        "name": "uglifyjs-webpack-plugin",
        "rawSpec": "",
        "spec": "latest",
        "type": "tag"
      },
      "/home/pangbo/pb/webpack-test"
    ]
  ],
  "_from": "uglifyjs-webpack-plugin",
  "_hasShrinkwrap": false,
  "_id": "uglifyjs-webpack-plugin@2.0.1",
  "_location": "/uglifyjs-webpack-plugin",
  "_nodeVersion": "10.10.0",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/uglifyjs-webpack-plugin_2.0.1_1537266135629_0.3131996305648237"
  },
  "_npmUser": {
    "name": "evilebottnawi",
    "email": "sheo13666q@gmail.com"
  },
  "_npmVersion": "6.4.1",
  "_phantomChildren": {
    "commondir": "1.0.1",
    "make-dir": "1.3.0",
    "path-exists": "3.0.0"
  },
  "_requested": {
    "raw": "uglifyjs-webpack-plugin",
    "scope": null,
    "escapedName": "uglifyjs-webpack-plugin",
    "name": "uglifyjs-webpack-plugin",
    "rawSpec": "",
    "spec": "latest",
    "type": "tag"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "http://stg-qtrrepo201z.stg.jp.local/repository/npm-public/uglifyjs-webpack-plugin/-/uglifyjs-webpack-plugin-2.0.1.tgz",
  "_shasum": "f346af53ed496ce72fef462517d417f62bec3010",
  "_shrinkwrap": null,
  "_spec": "uglifyjs-webpack-plugin",
  "_where": "/home/pangbo/pb/webpack-test",
  "author": {
    "name": "webpack Contrib Team"
  },
  "bin": "",
  "bugs": {
    "url": "https://github.com/webpack-contrib/uglifyjs-webpack-plugin/issues"
  },
  "dependencies": {
    "cacache": "^11.2.0",
    "find-cache-dir": "^2.0.0",
    "schema-utils": "^1.0.0",
    "serialize-javascript": "^1.4.0",
    "source-map": "^0.6.1",
    "uglify-js": "^3.0.0",
    "webpack-sources": "^1.1.0",
    "worker-farm": "^1.5.2"
  },
  "description": "UglifyJS plugin for webpack",
  "devDependencies": {
    "@commitlint/cli": "^7.1.2",
    "@commitlint/config-conventional": "^7.1.2",
    "@webpack-contrib/eslint-config-webpack": "^2.0.4",
    "babel-cli": "^6.26.0",
    "babel-jest": "^23.4.2",
    "babel-plugin-transform-object-rest-spread": "^6.26.0",
    "babel-polyfill": "^6.26.0",
    "babel-preset-env": "^1.6.1",
    "conventional-github-releaser": "^3.1.2",
    "cross-env": "^5.1.3",
    "del": "^3.0.0",
    "del-cli": "^1.1.0",
    "eslint": "^5.5.0",
    "eslint-config-webpack": "^1.2.5",
    "eslint-plugin-import": "^2.8.0",
    "eslint-plugin-prettier": "^2.6.2",
    "husky": "^0.14.3",
    "jest": "^23.5.0",
    "lint-staged": "^7.2.2",
    "memory-fs": "^0.4.1",
    "pre-commit": "^1.2.2",
    "prettier": "^1.14.2",
    "standard-version": "^4.3.0",
    "terser": "^3.7.6",
    "webpack": "^4.17.2",
    "webpack-defaults": "^2.3.0"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-1HhCHkOB6wRCcv7htcz1QRPVbWPEY074RP9vzt/X0LF4xXm9l4YGd0qja7z88abDixQlnVwBjXsTBs+Xsn/eeQ==",
    "shasum": "f346af53ed496ce72fef462517d417f62bec3010",
    "tarball": "http://stg-qtrrepo201z.stg.jp.local/repository/npm-public/uglifyjs-webpack-plugin/-/uglifyjs-webpack-plugin-2.0.1.tgz",
    "fileCount": 10,
    "unpackedSize": 56712,
    "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJboNHYCRA9TVsSAnZWagAAhOAQAJH9FxDGeGyGi1tU6L/d\ntXqW+Yd+fNJ48Zuk5HcnrecBDlTpZkzWrN0965clIMfZ4wZPTzD+dXCaeifq\nbu4QbElGMQRq8GC0j9IidnuTG80YKYGtMroNAKUMoUliiKzzRLz4deAjOJRI\nWOcgOZGj73feUUQTwwnfObse9bYdlWPtYd/8hb4i0hSdMwtEN5Nsj09j5LlR\nwcZO/v9yCH8FN49LnirIm3ptwoUMxB+UKsNnvu32ibkfkG2q7vlw/wPT9nqU\nZUA/YJWQPwM1O+dhxvlS2h9/0Rr2fRktGddIGk4GDKFiqOTi0o1/uCR1KYtL\nm34toHY8UtxKTehjgQWGgi4Yb4j2S0o8a/FhOKFMFp+6SpYB1JzSWbuhj1c9\nErDZ4v6SEf7qk+4ceuF0H9TmFW+Ps0EcZgHCZrfSYhW2ftsyqBN+N0ENbIWd\nCBk3deUXEG8mFbbMPDB/eJQjya1I0Bwimmi5P1F8Yn+6uJGatxopa4L8pYsl\n8KpX7dFIHP/vd0V9UQpvZAbkCaBJtTOzZIFU9nPalOToEqRISTAboK/H0jx7\nJ9zxijXkcoBBR/Zql7UUvEVIx9yIxlblDRYqWkfYyrL+XiieOVhj2Lpf8mc0\nMjrWvSh3hISS5vY5lFOjxXlmvJMf5EwSIUYcs4der9rpKNzm6pP9F8FN9YLM\nkuaP\r\n=Uf/j\r\n-----END PGP SIGNATURE-----\r\n"
  },
  "engines": {
    "node": ">= 6.9.0 <7.0.0 || >= 8.9.0"
  },
  "files": [
    "dist"
  ],
  "gitHead": "e1a67c129ae1461e629a34cbcbdf7815d81041a9",
  "homepage": "https://github.com/webpack-contrib/uglifyjs-webpack-plugin",
  "jest": {
    "testEnvironment": "node"
  },
  "keywords": [
    "uglify",
    "uglify-js",
    "uglify-es",
    "webpack",
    "webpack-plugin"
  ],
  "license": "MIT",
  "lint-staged": {
    "*.js": [
      "eslint --fix",
      "git add"
    ]
  },
  "main": "dist/cjs.js",
  "maintainers": [
    {
      "name": "bebraw",
      "email": "bebraw@gmail.com"
    },
    {
      "name": "d3viant0ne",
      "email": "wiens.joshua@gmail.com"
    },
    {
      "name": "evilebottnawi",
      "email": "sheo13666q@gmail.com"
    },
    {
      "name": "jhnns",
      "email": "mail@johannesewald.de"
    },
    {
      "name": "jtangelder",
      "email": "j.tangelder@gmail.com"
    },
    {
      "name": "michael-ciniawsky",
      "email": "michael.ciniawsky@gmail.com"
    },
    {
      "name": "shellscape",
      "email": "andrew@shellscape.org"
    },
    {
      "name": "sokra",
      "email": "tobias.koppers@googlemail.com"
    },
    {
      "name": "thelarkinn",
      "email": "sean.larkin@cuw.edu"
    }
  ],
  "name": "uglifyjs-webpack-plugin",
  "optionalDependencies": {},
  "peerDependencies": {
    "webpack": "^4.3.0"
  },
  "pre-commit": "lint-staged",
  "readme": "<div align=\"center\">\n  <a href=\"https://github.com/webpack/webpack\">\n    <img width=\"200\" height=\"200\" src=\"https://webpack.js.org/assets/icon-square-big.svg\">\n  </a>\n</div>\n\n[![npm][npm]][npm-url]\n[![node][node]][node-url]\n[![deps][deps]][deps-url]\n[![tests][tests]][tests-url]\n[![cover][cover]][cover-url]\n[![chat][chat]][chat-url]\n[![size][size]][size-url]\n\n# UglifyJS Webpack Plugin\n\nThis plugin uses [uglify-js](https://github.com/mishoo/UglifyJS2) to minify your JavaScript.\n\n## Requirements\n\nThis module requires a minimum of Node v6.9.0 and Webpack v4.0.0.\n\n## Getting Started\n\nTo begin, you'll need to install `uglifyjs-webpack-plugin`:\n\n```console\n$ npm install uglifyjs-webpack-plugin --save-dev\n```\n\nThen add the plugin to your `webpack` config. For example:\n\n**webpack.config.js**\n\n```js\nconst UglifyJsPlugin = require('uglifyjs-webpack-plugin');\n\nmodule.exports = {\n  //...\n  optimization: {\n    minimizer: [new UglifyJsPlugin()]\n  }\n};\n```\n\nAnd run `webpack` via your preferred method.\n\n## Options\n\n### `test`\n\nType: `String|RegExp|Array<String|RegExp>`\nDefault: `/\\.js(\\?.*)?$/i`\n\nTest to match files against.\n\n```js\n// in your webpack.config.js\nnew UglifyJsPlugin({\n  test: /\\.js(\\?.*)?$/i\n})\n```\n\n### `include`\n\nType: `String|RegExp|Array<String|RegExp>`\nDefault: `undefined`\n\nFiles to include.\n\n```js\n// in your webpack.config.js\nnew UglifyJsPlugin({\n  include: /\\/includes/\n})\n```\n\n### `exclude`\n\nType: `String|RegExp|Array<String|RegExp>`\nDefault: `undefined`\n\nFiles to exclude.\n\n```js\n// in your webpack.config.js\nnew UglifyJsPlugin({\n  exclude: /\\/excludes/\n})\n```\n\n### `cache`\n\nType: `Boolean|String`\nDefault: `false`\n\nEnable file caching. \nDefault path to cache directory: `node_modules/.cache/uglifyjs-webpack-plugin`.\n\n> ℹ️ If you use your own `minify` function please read the `minify` section for cache invalidation correctly.\n\n#### `Boolean`\n\nEnable/disable file caching.\n\n```js\n// in your webpack.config.js\nnew UglifyJsPlugin({\n  cache: true\n})\n```\n\n#### `String`\n\nEnable file caching and set path to cache directory.\n\n**webpack.config.js**\n\n```js\n// in your webpack.config.js\nnew UglifyJsPlugin({\n  cache: 'path/to/cache'\n})\n```\n\n### `cacheKeys`\n\nType: `Function<(defaultCacheKeys, file) -> Object>`\nDefault: `defaultCacheKeys => defaultCacheKeys`\n\nAllows you to override default cache keys.\n\nDefault cache keys:\n\n```js\n({\n  'uglify-js': require('uglify-js/package.json').version, // uglify version\n  'uglifyjs-webpack-plugin': require('../package.json').version, // plugin version\n  'uglifyjs-webpack-plugin-options': this.options, // plugin options\n  path: compiler.outputPath ? `${compiler.outputPath}/${file}` : file, // asset path\n  hash: crypto.createHash('md4').update(input).digest('hex'), // source file hash\n});\n```\n\n```js\n// in your webpack.config.js\nnew UglifyJsPlugin({\n  cache: true,\n  cacheKeys: (defaultCacheKeys, file) => {\n    defaultCacheKeys.myCacheKey = 'myCacheKeyValue';\n\n    return defaultCacheKeys;\n  },\n})\n```\n\n### `parallel`\n\nType: `Boolean|Number`\nDefault: `false`\n\nUse multi-process parallel running to improve the build speed. \nDefault number of concurrent runs: `os.cpus().length - 1`.\n\n> ℹ️ Parallelization can speedup your build significantly and is therefore **highly recommended**.\n\n#### `Boolean`\n\nEnable/disable multi-process parallel running.\n\n```js\n// in your webpack.config.js\nnew UglifyJsPlugin({\n  parallel: true\n})\n```\n\n#### `Number`\n\nEnable multi-process parallel running and set number of concurrent runs.\n\n```js\n// in your webpack.config.js\nnew UglifyJsPlugin({\n  parallel: 4\n})\n```\n\n### `sourceMap`\n\nType: `Boolean`\nDefault: `false`\n\nUse source maps to map error message locations to modules (this slows down the compilation).\nIf you use your own `minify` function please read the `minify` section for handling source maps correctly.\n\n> ⚠️ **`cheap-source-map` options don't work with this plugin**.\n\n```js\n// in your webpack.config.js\nnew UglifyJsPlugin({\n  sourceMap: true\n})\n```\n\n### `minify`\n\nType: `Function`\nDefault: `undefined`\n\nAllows you to override default minify function. \nBy default plugin uses [uglify-js](https://github.com/mishoo/UglifyJS2) package.\nUseful for using and testing unpublished versions or forks.\n\n> ⚠️ **Always use `require` inside `minify` function when `parallel` option enabled**.\n\n```js\n// in your webpack.config.js\nnew UglifyJsPlugin({\n  minify(file, sourceMap) {\n    const extractedComments = [];\n\n    // Custom logic for extract comments\n\n    const { error, map, code, warnings } = require('uglify-module') // Or require('./path/to/uglify-module')\n      .minify(file, {\n        /* Your options for minification */\n      });\n\n    return { error, map, code, warnings, extractedComments };\n  }\n})\n```\n\n### `uglifyOptions`\n\nType: `Object`\nDefault: [default](https://github.com/mishoo/UglifyJS2#minify-options)\n\nUglifyJS minify options.\n\n```js\n// in your webpack.config.js\nnew UglifyJsPlugin({\n  uglifyOptions: {\n    warnings: false,\n    parse: {},\n    compress: {},\n    mangle: true, // Note `mangle.properties` is `false` by default.\n    output: null,\n    toplevel: false,\n    nameCache: null,\n    ie8: false,\n    keep_fnames: false,\n  }\n})\n```\n\n### `extractComments`\n\nType: `Boolean|String|RegExp|Function<(node, comment) -> Boolean|Object>`\nDefault: `false`\n\nWhether comments shall be extracted to a separate file, (see [details](https://github.com/webpack/webpack/commit/71933e979e51c533b432658d5e37917f9e71595a)).\nBy default extract only comments using `/^\\**!|@preserve|@license|@cc_on/i` regexp condition and remove remaining comments.\nIf the original file is named `foo.js`, then the comments will be stored to `foo.js.LICENSE`.\nThe `uglifyOptions.output.comments` option specifies whether the comment will be preserved, i.e. it is possible to preserve some comments (e.g. annotations) while extracting others or even preserving comments that have been extracted.\n\n#### `Boolean`\n\nEnable/disable extracting comments.\n\n```js\n// in your webpack.config.js\nnew UglifyJsPlugin({\n  extractComments: true\n})\n```\n\n#### `String`\n\nExtract `all` or `some` (use `/^\\**!|@preserve|@license|@cc_on/i` RegExp) comments.\n\n```js\n// in your webpack.config.js\nnew UglifyJsPlugin({\n  extractComments: 'all'\n})\n```\n\n#### `RegExp`\n\nAll comments that match the given expression will be extracted to the separate file. \n\n```js\n// in your webpack.config.js\nnew UglifyJsPlugin({\n  extractComments: /@extract/i\n})\n```\n\n#### `Function<(node, comment) -> Boolean>`\n\nAll comments that match the given expression will be extracted to the separate file. \n\n```js\n// in your webpack.config.js\nnew UglifyJsPlugin({\n  extractComments: function (astNode, comment) {\n    if (/@extract/i.test(comment.value)) {\n      return true;\n    }\n    \n    return false;\n  }\n})\n```\n\n#### `Object`\n\nAllow to customize condition for extract comments, specify extracted file name and banner.\n\n```js\n// in your webpack.config.js\nnew UglifyJsPlugin({\n  extractComments: {\n    condition: /^\\**!|@preserve|@license|@cc_on/i,\n    filename(file) {\n      return `${file}.LICENSE`;\n    },\n    banner(licenseFile) {\n      return `License information can be found in ${licenseFile}`;\n    }\n  }\n})\n```\n\n##### `condition`\n\nType: `Boolean|String|RegExp|Function<(node, comment) -> Boolean|Object>`\n\nCondition what comments you need extract.\n\n```js\n// in your webpack.config.js\nnew UglifyJsPlugin({\n  extractComments: {\n    condition: 'some',\n    filename(file) {\n     return `${file}.LICENSE`;\n    },\n    banner(licenseFile) {\n     return `License information can be found in ${licenseFile}`;\n    }\n  }\n})\n```\n\n##### `filename`\n\nType: `Regex|Function<(string) -> String>`\nDefault: `${file}.LICENSE`\n\nThe file where the extracted comments will be stored.\nDefault is to append the suffix `.LICENSE` to the original filename.\n\n```js\n// in your webpack.config.js\nnew UglifyJsPlugin({\n  extractComments: {\n    condition: /^\\**!|@preserve|@license|@cc_on/i,\n    filename: 'extracted-comments.js',\n    banner(licenseFile) {\n     return `License information can be found in ${licenseFile}`;\n    }\n  }\n})\n```\n\n##### `banner`\n\nType: `Boolean|String|Function<(string) -> String>`\nDefault: `/*! For license information please see ${commentsFile} */`\n\nThe banner text that points to the extracted file and will be added on top of the original file. \nCan be `false` (no banner), a `String`, or a `Function<(string) -> String>` that will be called with the filename where extracted comments have been stored. \nWill be wrapped into comment.\n\n```js\n// in your webpack.config.js\nnew UglifyJsPlugin({\n  extractComments: {\n    condition: true,\n    filename(file) {\n     return `${file}.LICENSE`;\n    },\n    banner(commentsFile) {\n     return `My custom banner about license information ${commentsFile}`;\n    }\n  }\n})\n```\n\n### `warningsFilter`\n\nType: `Function<(warning, source) -> Boolean>`\nDefault: `() => true`\n\nAllow to filter [uglify-js](https://github.com/mishoo/UglifyJS2) warnings.\nReturn `true` to keep the warning, `false` otherwise.\n\n```js\n// in your webpack.config.js\nnew UglifyJsPlugin({\n  warningsFilter: (warning, source) => {\n    if (/Dropping unreachable code/i.test(warning)) {\n      return true;\n    }\n\n    if (/filename\\.js/i.test(source)) {\n      return true;\n    }\n\n    return false;\n  },\n})\n```\n\n## Examples\n\n### Cache And Parallel\n\nEnable cache and multi-process parallel running.\n\n```js\n// in your webpack.config.js\nconst UglifyJsPlugin = require('uglifyjs-webpack-plugin');\n\nmodule.exports = {\n  //...\n  optimization: {\n    minimizer: [\n      new UglifyJsPlugin({\n        cache: true,\n        parallel: true\n      })\n    ]\n  }\n};\n```\n\n### Preserve Comments\n\nExtract all legal comments (i.e. `/^\\**!|@preserve|@license|@cc_on/i`) and preserve `/@license/i` comments.\n\n```js\n// in your webpack.config.js\nconst UglifyJsPlugin = require('uglifyjs-webpack-plugin');\n\nmodule.exports = {\n  //...\n  optimization: {\n    minimizer: [\n      new UglifyJsPlugin({\n        uglifyOptions: {\n          output: {\n            comments: /@license/i\n          }\n        },\n        extractComments: true\n      })\n    ]\n  }\n};\n```\n\n### Custom Minify Function\n\nOverride default minify function - use [terser](https://github.com/fabiosantoscode/terser) for minification.\n\n```js\n// in your webpack.config.js\nconst UglifyJsPlugin = require('uglifyjs-webpack-plugin');\n\nmodule.exports = {\n  //...\n  optimization: {\n    minimizer: [\n      new UglifyJsPlugin({\n        // Uncomment lines below for cache invalidation correctly\n        // cache: true,\n        // cacheKeys(defaultCacheKeys) {\n        //   delete defaultCacheKeys['uglify-js'];\n        //\n        //   return Object.assign(\n        //     {},\n        //     defaultCacheKeys,\n        //     { 'uglify-js': require('uglify-js/package.json').version },\n        //   );\n        // },\n        minify(file, sourceMap) {\n          // https://github.com/mishoo/UglifyJS2#minify-options\n          const uglifyJsOptions = {\n            /* your `uglify-js` package options */\n          };\n      \n          if (sourceMap) {\n            uglifyJsOptions.sourceMap = {\n              content: sourceMap,\n            };\n          }\n      \n          return require('terser').minify(file, uglifyJsOptions);\n        },\n      })\n    ]\n  }\n};\n```\n\n## Contributing\n\nPlease take a moment to read our contributing guidelines if you haven't yet done so.\n\n[CONTRIBUTING](./.github/CONTRIBUTING.md)\n\n## License\n\n[MIT](./LICENSE)\n\n[npm]: https://img.shields.io/npm/v/uglifyjs-webpack-plugin.svg\n[npm-url]: https://npmjs.com/package/uglifyjs-webpack-plugin\n[node]: https://img.shields.io/node/v/uglifyjs-webpack-plugin.svg\n[node-url]: https://nodejs.org\n[deps]: https://david-dm.org/webpack-contrib/uglifyjs-webpack-plugin.svg\n[deps-url]: https://david-dm.org/webpack-contrib/uglifyjs-webpack-plugin\n[tests]: https://img.shields.io/circleci/project/github/webpack-contrib/uglifyjs-webpack-plugin.svg\n[tests-url]: https://circleci.com/gh/webpack-contrib/uglifyjs-webpack-plugin\n[cover]: https://codecov.io/gh/webpack-contrib/uglifyjs-webpack-plugin/branch/master/graph/badge.svg\n[cover-url]: https://codecov.io/gh/webpack-contrib/uglifyjs-webpack-plugin\n[chat]: https://img.shields.io/badge/gitter-webpack%2Fwebpack-brightgreen.svg\n[chat-url]: https://gitter.im/webpack/webpack\n[size]: https://packagephobia.now.sh/badge?p=uglifyjs-webpack-plugin\n[size-url]: https://packagephobia.now.sh/result?p=uglifyjs-webpack-plugin\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/webpack-contrib/uglifyjs-webpack-plugin.git"
  },
  "scripts": {
    "build": "cross-env NODE_ENV=production babel src -d dist --ignore 'src/**/*.test.js' --copy-files",
    "ci:coverage": "npm run test:coverage -- --runInBand",
    "ci:lint": "npm run lint && npm run security",
    "ci:lint:commits": "commitlint --from=${CIRCLE_BRANCH} --to=${CIRCLE_SHA1}",
    "ci:test": "npm run test -- --runInBand",
    "clean": "del-cli dist",
    "commitlint": "commitlint",
    "commitmsg": "commitlint -e $GIT_PARAMS",
    "defaults": "webpack-defaults",
    "lint": "eslint --cache src test",
    "lint-staged": "lint-staged",
    "prebuild": "npm run clean",
    "prepare": "npm run build",
    "release": "standard-version",
    "release:ci": "conventional-github-releaser -p angular",
    "release:validate": "commitlint --from=$(git describe --tags --abbrev=0) --to=$(git rev-parse HEAD)",
    "security": "npm audit",
    "start": "npm run build -- -w",
    "test": "jest",
    "test:coverage": "jest --collectCoverageFrom='src/**/*.js' --coverage",
    "test:watch": "jest --watch"
  },
  "version": "2.0.1"
}
