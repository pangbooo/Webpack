{
  "_args": [
    [
      {
        "raw": "file-loader",
        "scope": null,
        "escapedName": "file-loader",
        "name": "file-loader",
        "rawSpec": "",
        "spec": "latest",
        "type": "tag"
      },
      "/home/pangbo/pb/webpack-test"
    ]
  ],
  "_from": "file-loader",
  "_hasShrinkwrap": false,
  "_id": "file-loader@2.0.0",
  "_location": "/file-loader",
  "_nodeVersion": "10.9.0",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/file-loader_2.0.0_1534880619992_0.34421822249192835"
  },
  "_npmUser": {
    "name": "michael-ciniawsky",
    "email": "michael.ciniawsky@gmail.com"
  },
  "_npmVersion": "6.4.0",
  "_phantomChildren": {},
  "_requested": {
    "raw": "file-loader",
    "scope": null,
    "escapedName": "file-loader",
    "name": "file-loader",
    "rawSpec": "",
    "spec": "latest",
    "type": "tag"
  },
  "_requiredBy": [
    "#DEV:/",
    "#USER"
  ],
  "_resolved": "http://stg-qtrrepo201z.stg.jp.local/repository/npm-public/file-loader/-/file-loader-2.0.0.tgz",
  "_shasum": "39749c82f020b9e85901dcff98e8004e6401cfde",
  "_shrinkwrap": null,
  "_spec": "file-loader",
  "_where": "/home/pangbo/pb/webpack-test",
  "author": {
    "name": "Tobias Koppers @sokra"
  },
  "bin": "",
  "bugs": {
    "url": "https://github.com/webpack-contrib/file-loader/issues"
  },
  "dependencies": {
    "loader-utils": "^1.0.2",
    "schema-utils": "^1.0.0"
  },
  "description": "A file loader module for webpack",
  "devDependencies": {
    "@commitlint/cli": "^6.1.3",
    "@commitlint/config-conventional": "^6.1.3",
    "@webpack-contrib/eslint-config-webpack": "^2.0.4",
    "babel-cli": "^6.0.0",
    "babel-jest": "^22.4.3",
    "babel-plugin-transform-object-rest-spread": "^6.0.0",
    "babel-polyfill": "^6.0.0",
    "babel-preset-env": "^1.0.0",
    "conventional-github-releaser": "^2.0.2",
    "cross-env": "^5.0.0",
    "del": "^3.0.0",
    "del-cli": "^1.0.0",
    "eslint": "^4.0.0",
    "eslint-config-webpack": "^1.0.0",
    "eslint-plugin-import": "^2.0.0",
    "eslint-plugin-prettier": "^2.6.0",
    "husky": "^0.14.3",
    "jest": "^22.4.3",
    "lint-staged": "^7.0.4",
    "memory-fs": "^0.4.0",
    "nsp": "^3.2.1",
    "pre-commit": "^1.0.0",
    "prettier": "^1.11.1",
    "standard-version": "^4.0.0",
    "webpack": "^4.5.0",
    "webpack-defaults": "^2.3.0"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-YCsBfd1ZGCyonOKLxPiKPdu+8ld9HAaMEvJewzz+b2eTF7uL5Zm/HdBF6FjCrpCMRq25Mi0U1gl4pwn2TlH7hQ==",
    "shasum": "39749c82f020b9e85901dcff98e8004e6401cfde",
    "tarball": "http://stg-qtrrepo201z.stg.jp.local/repository/npm-public/file-loader/-/file-loader-2.0.0.tgz",
    "fileCount": 7,
    "unpackedSize": 22987,
    "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbfGtsCRA9TVsSAnZWagAAlqUP/jV3aKYzZnimlTq2xBwj\nd2DTEd86NB5AKsNP8lpRaOyuU/BKlISoz3omCT2/s2YPqy2Gv0iGTH2dCDUk\nqNJELYG7xP4wyHFigmWV2rTupV0XNG5mxYQa5J37GIhtUv3hp0iBS+gQWAzG\nGRkCQ4MEh9bQ+ICSL5xniKemudoRnVynLru5tAjSErpsIuLL45Op/hV/cBre\nwAOqS6WN6BXPz8oLkldrMmWEB6bKSIG6fjjsmP56aY1f73UkR0OenVpxX5Xe\nRmkFxk9M3Qi/rPvbbr3kf+t/QMOPzHTgwapxcDNPp8AuZhFxsSQuWCsPw3Gr\nosh0H7YMf9GDGUvVMoisPl94icif+tnrUyipN3W96xPJNe0CE0QBc1KSXVds\n3iQiarHcR9qegdBnQuWHp4pHotolR9mioi/y7rlAxh6NtoAiWJ+lV4qVwXSn\nYE/CsuzR6Z0AHIOByNYr2X4s/hbElSLZg4vLF1YjlZyBunfdda4o1J69ceSv\nxlihDwIJ+3Q4yWSzWBBzHXQiR4gEooXCr1+xBj/TVuIr375Qc6uh5RhwhU+9\ncEIemxx2XasYTwBV/IhXEvzdPmak0/2KXEteBRU9eMRlAs2nVqH3kAZi+BIk\nP5K4yKUaDBgA5aNS7LibPSKjwcpEg66214r9t8tgcVFRvuXgK9PurBI1LAml\nlVd0\r\n=TOu8\r\n-----END PGP SIGNATURE-----\r\n"
  },
  "engines": {
    "node": ">= 6.9.0 < 7.0.0 || >= 8.9.0"
  },
  "files": [
    "dist"
  ],
  "gitHead": "8d43c38bd023719e3c270d431131d45ceafa2929",
  "homepage": "https://github.com/webpack-contrib/file-loader",
  "keywords": [
    "webpack"
  ],
  "license": "MIT",
  "lint-staged": {
    "*.js": [
      "eslint --fix",
      "git add"
    ]
  },
  "main": "dist/cjs.js",
  "maintainers": [
    {
      "name": "bebraw",
      "email": "bebraw@gmail.com"
    },
    {
      "name": "d3viant0ne",
      "email": "wiens.joshua@gmail.com"
    },
    {
      "name": "ericclemmons",
      "email": "eric@smarterspam.com"
    },
    {
      "name": "evilebottnawi",
      "email": "sheo13666q@gmail.com"
    },
    {
      "name": "jhnns",
      "email": "mail@johannesewald.de"
    },
    {
      "name": "jtangelder",
      "email": "j.tangelder@gmail.com"
    },
    {
      "name": "michael-ciniawsky",
      "email": "michael.ciniawsky@gmail.com"
    },
    {
      "name": "shellscape",
      "email": "andrew@shellscape.org"
    },
    {
      "name": "sokra",
      "email": "tobias.koppers@googlemail.com"
    },
    {
      "name": "thelarkinn",
      "email": "sean.larkin@cuw.edu"
    }
  ],
  "name": "file-loader",
  "optionalDependencies": {},
  "peerDependencies": {
    "webpack": "^2.0.0 || ^3.0.0 || ^4.0.0"
  },
  "pre-commit": "lint-staged",
  "readme": "<div align=\"center\">\n  <a href=\"https://github.com/webpack/webpack\">\n    <img width=\"200\" height=\"200\" src=\"https://webpack.js.org/assets/icon-square-big.svg\">\n  </a>\n</div>\n\n[![npm][npm]][npm-url]\n[![node][node]][node-url]\n[![deps][deps]][deps-url]\n[![tests][tests]][tests-url]\n[![chat][chat]][chat-url]\n\n# file-loader\n\nA file loader module for webpack\n\n## Requirements\n\nThis module requires a minimum of Node v6.9.0 and works with Webpack v3 and Webpack v4.\n\n## Getting Started\n\nTo begin, you'll need to install `file-loader`:\n\n```console\n$ npm install file-loader --save-dev\n```\n\nImport (or `require`) the target file(s) in one of the bundle's files:\n\n```js\n// bundle file\nimport img from './file.png'\n```\n\nThen add the loader to your `webpack` config. For example:\n\n```js\n// webpack.config.js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.(png|jpg|gif)$/,\n        use: [\n          {\n            loader: 'file-loader',\n            options: {}\n          }\n        ]\n      }\n    ]\n  }\n}\n```\n\nAnd run `webpack` via your preferred method. This will emit `file.png` as a file\nin the output directory (with the specified naming convention, if options are\nspecified to do so) and returns the public URI of the file.\n\n_Note: By default the filename of the resulting file is the MD5 hash of the\nfile's contents with the original extension of the required resource._\n\n## Options\n\n### `context`\n\nType: `String`\nDefault: [`context`](https://webpack.js.org/configuration/entry-context/#context)\n\nSpecifies a custom file context.\n\n```js\n// webpack.config.js\n...\n{\n  loader: 'file-loader',\n  options: {\n    name: '[path][name].[ext]',\n    context: ''\n  }\n}\n...\n```\n\n### `emitFile`\n\nType: `Boolean`\nDefault: `true`\n\nIf true, emits a file (writes a file to the filesystem). If false, the loader\nwill return a public URI but _will not_ emit the file. It is often useful to\ndisable this option for server-side packages.\n\n```js\n// bundle file\nimport img from './file.png'\n```\n\n```js\n// webpack.config.js\n...\n{\n  loader: 'file-loader',\n  options: {\n    emitFile: false\n  }\n}\n...\n```\n\n### `name`\n\nType: `String|Function`\nDefault: `'[hash].[ext]'`\n\nSpecifies a custom filename template for the target file(s) using the query\nparameter `name`. For example, to copy a file from your `context` directory into\nthe output directory retaining the full directory structure, you might use:\n\n```js\n// webpack.config.js\n{\n  loader: 'file-loader',\n  options: {\n    name: '[path][name].[ext]'\n  }\n}\n```\n\nOr using a `Function`:\n\n```js\n// webpack.config.js\n...\n{\n  loader: 'file-loader',\n  options: {\n    name (file) {\n      if (env === 'development') {\n        return '[path][name].[ext]'\n      }\n\n      return '[hash].[ext]'\n    }\n  }\n}\n...\n```\n\n_Note: By default the path and name you specify will output the file in that\nsame directory, and will also use the same URI path to access the file._\n\n### `outputPath`\n\nType: `String|Function`\nDefault: `undefined`\n\nSpecify a filesystem path where the target file(s) will be placed.\n\n```js\n// webpack.config.js\n...\n{\n  loader: 'file-loader',\n  options: {\n    name: '[path][name].[ext]',\n    outputPath: 'images/'\n  }\n}\n...\n```\n\n### `publicPath`\n\nType: `String|Function`\nDefault: [`__webpack_public_path__`](https://webpack.js.org/api/module-variables/#__webpack_public_path__-webpack-specific-)\n\nSpecifies a custom public path for the target file(s).\n\n```js\n// webpack.config.js\n...\n{\n  loader: 'file-loader',\n  options: {\n    name: '[path][name].[ext]',\n    publicPath: 'assets/'\n  }\n}\n...\n```\n\n### `regExp`\n\nType: `RegExp`\nDefault: `undefined`\n\nSpecifies a Regular Expression to one or many parts of the target file path.\nThe capture groups can be reused in the `name` property using `[N]`\n[placeholder](https://github.com/webpack-contrib/file-loader#placeholders).\n\n```js\nimport img from './customer01/file.png'\n```\n\n**webpack.config.js**\n```js\n{\n  loader: 'file-loader',\n  options: {\n    regExp: /\\/([a-z0-9]+)\\/[a-z0-9]+\\.png$/,\n    name: '[1]-[name].[ext]'\n  }\n}\n```\n\n_Note: If `[0]` is used, it will be replaced by the entire tested string,\nwhereas `[1]` will contain the first capturing parenthesis of your regex and so\non..._\n\n### `useRelativePath`\n\nType: `Boolean`\nDefault: `false`\n\nSpecifies whether or not to generate a relative URI for each target file context.\n\n```js\n// webpack.config.js\n{\n  loader: 'file-loader',\n  options: {\n    useRelativePath: process.env.NODE_ENV === \"production\"\n  }\n}\n```\n\n## Placeholders\n\n### `[ext]`\n\nType: `String`\nDefault: `file.extname`\n\nThe file extension of the target file/resource.\n\n### `[hash]`\n\nType: `String`\nDefault: `'md5'`\n\nSpecifies the hash method to use for hashing the file content. See\n[Hashes](https://github.com/webpack-contrib/file-loader#hashes).\n\n### `[N]`\n\nType: `String`\nDefault: `undefined`\n\nThe n-th match obtained from matching the current file name against the regExp\n\n### `[name]`\n\nType: `String`\nDefault: `file.basename`\n\nThe basename of the file/resource.\n\n### `[path]`\n\nType: `String`\nDefault: `file.dirname`\n\nThe path of the resource relative to the webpack/config context.\n\n## Hashes\n\nCustom hashes can be used by specifying a hash with the following format:\n `[<hashType>:hash:<digestType>:<length>]`.\n\n### `digestType`\n\nType: `String`\nDefault: `'hex'`\n\nThe [digest](https://en.wikipedia.org/wiki/Cryptographic_hash_function) that the\nhash function should use. Valid values include: base26, base32, base36,\nbase49, base52, base58, base62, base64, and hex.\n\n### `hashType`\n\nType: `String`\nDefault: `'md5'`\n\nThe type of hash that the has function should use. Valid values include: md5,\nsha1, sha256, and sha512.\n\n### `length`\n\nType: `Number`\nDefault: `9999`\n\nUsers may also specify a length for the computed hash.\n\n## Examples\n\nThe following examples show how one might use `file-loader` and what the result\nwould be.\n\n```js\n// bundle file\nimport png from 'image.png'\n```\n\n```js\n// webpack.config.js\n{\n  loader: 'file-loader',\n  options: {\n    name: 'dirname/[hash].[ext]'\n  }\n}\n```\n\n```bash\n# result\ndirname/0dcbbaa701328ae351f.png\n```\n\n---\n\n```js\n// webpack.config.js\n{\n  loader: 'file-loader',\n  options: {\n    name: '[sha512:hash:base64:7].[ext]'\n  }\n}\n```\n\n```bash\n# result\ngdyb21L.png\n```\n\n---\n\n```js\n// bundle file\nimport png from 'path/to/file.png'\n```\n\n```js\n// webpack.config.js\n{\n  loader: 'file-loader',\n  options: {\n    name: '[path][name].[ext]?[hash]'\n  }\n}\n```\n\n```bash\n# result\npath/to/file.png?e43b20c069c4a01867c31e98cbce33c9\n```\n\n## Contributing\n\nPlease take a moment to read our contributing guidelines if you haven't yet done so.\n\n#### [CONTRIBUTING](./.github/CONTRIBUTING.md)\n\n## License\n\n#### [MIT](./LICENSE)\n\n[npm]: https://img.shields.io/npm/v/file-loader.svg\n[npm-url]: https://npmjs.com/package/file-loader\n\n[node]: https://img.shields.io/node/v/file-loader.svg\n[node-url]: https://nodejs.org\n\n[deps]: https://david-dm.org/webpack-contrib/file-loader.svg\n[deps-url]: https://david-dm.org/webpack-contrib/file-loader\n\n[tests]: \thttps://img.shields.io/circleci/project/github/webpack-contrib/file-loader.svg\n[tests-url]: https://circleci.com/gh/webpack-contrib/file-loader\n\n[cover]: https://codecov.io/gh/webpack-contrib/file-loader/branch/master/graph/badge.svg\n[cover-url]: https://codecov.io/gh/webpack-contrib/file-loader\n\n[chat]: https://img.shields.io/badge/gitter-webpack%2Fwebpack-brightgreen.svg\n[chat-url]: https://gitter.im/webpack/webpack\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/webpack-contrib/file-loader.git"
  },
  "scripts": {
    "build": "cross-env NODE_ENV=production babel src -d dist --ignore 'src/**/*.test.js' --copy-files",
    "ci:coverage": "npm run test:coverage -- --runInBand",
    "ci:lint": "npm run lint && npm run security",
    "ci:lint:commits": "commitlint --from=${CIRCLE_BRANCH} --to=${CIRCLE_SHA1}",
    "ci:test": "npm run test -- --runInBand",
    "clean": "del-cli dist",
    "commitlint": "commitlint",
    "commitmsg": "commitlint -e $GIT_PARAMS",
    "defaults": "webpack-defaults",
    "lint": "eslint --cache src test",
    "lint-staged": "lint-staged",
    "prebuild": "npm run clean",
    "prepare": "npm run build",
    "release": "standard-version",
    "release:ci": "conventional-github-releaser -p angular",
    "release:validate": "commitlint --from=$(git describe --tags --abbrev=0) --to=$(git rev-parse HEAD)",
    "security": "nsp check",
    "start": "npm run build -- -w",
    "test": "jest --env=node",
    "test:coverage": "jest --env=node --collectCoverageFrom='src/**/*.js' --coverage",
    "test:watch": "jest --env=node --watch"
  },
  "version": "2.0.0"
}
