{
  "_args": [
    [
      {
        "raw": "@webassemblyjs/ast@1.7.10",
        "scope": "@webassemblyjs",
        "escapedName": "@webassemblyjs%2fast",
        "name": "@webassemblyjs/ast",
        "rawSpec": "1.7.10",
        "spec": "1.7.10",
        "type": "version"
      },
      "/home/pangbo/pb/webpack-test/node_modules/webpack"
    ]
  ],
  "_from": "@webassemblyjs/ast@1.7.10",
  "_hasShrinkwrap": false,
  "_id": "@webassemblyjs/ast@1.7.10",
  "_location": "/@webassemblyjs/ast",
  "_nodeVersion": "10.11.0",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/ast_1.7.10_1540287316529_0.9836324856573864"
  },
  "_npmUser": {
    "name": "xtuc",
    "email": "contact@xtuc.fr"
  },
  "_npmVersion": "6.4.1",
  "_phantomChildren": {},
  "_requested": {
    "raw": "@webassemblyjs/ast@1.7.10",
    "scope": "@webassemblyjs",
    "escapedName": "@webassemblyjs%2fast",
    "name": "@webassemblyjs/ast",
    "rawSpec": "1.7.10",
    "spec": "1.7.10",
    "type": "version"
  },
  "_requiredBy": [
    "/@webassemblyjs/helper-wasm-section",
    "/@webassemblyjs/wasm-edit",
    "/@webassemblyjs/wasm-gen",
    "/@webassemblyjs/wasm-opt",
    "/@webassemblyjs/wasm-parser",
    "/@webassemblyjs/wast-parser",
    "/@webassemblyjs/wast-printer",
    "/webpack"
  ],
  "_resolved": "http://stg-qtrrepo201z.stg.jp.local/repository/npm-public/@webassemblyjs/ast/-/ast-1.7.10.tgz",
  "_shasum": "0cfc61d61286240b72fc522cb755613699eea40a",
  "_shrinkwrap": null,
  "_spec": "@webassemblyjs/ast@1.7.10",
  "_where": "/home/pangbo/pb/webpack-test/node_modules/webpack",
  "author": {
    "name": "Sven Sauleau"
  },
  "bugs": {
    "url": "https://github.com/xtuc/webassemblyjs/issues"
  },
  "dependencies": {
    "@webassemblyjs/helper-module-context": "1.7.10",
    "@webassemblyjs/helper-wasm-bytecode": "1.7.10",
    "@webassemblyjs/wast-parser": "1.7.10"
  },
  "description": "AST utils for webassemblyjs",
  "devDependencies": {
    "@webassemblyjs/helper-test-framework": "1.7.10",
    "array.prototype.flatmap": "^1.2.1",
    "dump-exports": "^0.1.0",
    "mamacro": "^0.0.3"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-wTUeaByYN2EA6qVqhbgavtGc7fLTOx0glG2IBsFlrFG51uXIGlYBTyIZMf4SPLo3v1bgV/7lBN3l7Z0R6Hswew==",
    "shasum": "0cfc61d61286240b72fc522cb755613699eea40a",
    "tarball": "http://stg-qtrrepo201z.stg.jp.local/repository/npm-public/@webassemblyjs/ast/-/ast-1.7.10.tgz",
    "fileCount": 34,
    "unpackedSize": 189878,
    "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbzutVCRA9TVsSAnZWagAANksP/3cBEapG26ynE9UMjUaB\n4gSoUXzKo3JBizniot7rBwSr6nrRAess5w9yhGFE23Lk+4PGDcdd+I+08GD7\nk2e6XCkelCFU9BnibkV9ZQfl62JhYrLfO6mtR7eRszYyHOTBnX+MFw4HjnRu\ngA+3xfm8ZjlWfRWP2dVYNiTovf5uoBiqBBZ5fyWp3KFStR/qlnSJ0s9Q2ZWZ\nmAw6OzXWNPI0Doryud6AAze8ojpMxmKLM10qIRSYcCMglJepXtDl+0CNFYuM\nw2M5qflY/nRFhEpyzmMkiDdAJAAX5chiDfPwjPVX4S0hc7CiDUVcsJUcT+9Y\nKL5EezL/1KRORgoxmzWpO/dEzg0Z79qFkT607ERmpM/dgi09bctopvltiyZk\nXXLKDpf8kQNM/AiKPfr1nd1m0mvzcjmb+fKqybb7Pki7+eSJshzc4HglOtwk\ngF/sc7OmptBF+BhBvGdEPTgEWGvrFGvgDZt0CFbK9UGomAnLt5Fg/lQf0PBV\nGqwg/BjKelAWQGV62BEMvVvqgnQ2XL1vlbwGQW9LKqaLjKBRgT8l7wO9sJRY\nqyCHMftYyR9JOcb04Gt6qD3gC3X6SGwANGwauR1cxaj9OfYcKHvb465pjSj7\nQPjlMU2rfWVPC1/p/v+ZgIE9bEdbiLS6d36HYaOzQjkz6zdIDEOcmlB8q0Ee\nK2ZW\r\n=AqS6\r\n-----END PGP SIGNATURE-----\r\n"
  },
  "gitHead": "f558c6c047187f24a2200ab04104f173de226794",
  "homepage": "https://github.com/xtuc/webassemblyjs#readme",
  "keywords": [
    "webassembly",
    "javascript",
    "ast"
  ],
  "license": "MIT",
  "main": "lib/index.js",
  "maintainers": [
    {
      "name": "xtuc",
      "email": "contact@xtuc.fr"
    }
  ],
  "module": "esm/index.js",
  "name": "@webassemblyjs/ast",
  "optionalDependencies": {},
  "publishConfig": {
    "access": "public"
  },
  "readme": "# @webassemblyjs/ast\n\n> AST utils for webassemblyjs\n\n## Installation\n\n```sh\nyarn add @webassemblyjs/ast\n```\n\n## Usage\n\n### Traverse\n\n```js\nimport { traverse } from \"@webassemblyjs/ast\";\n\ntraverse(ast, {\n  Module(path) {\n    console.log(path.node);\n  }\n});\n```\n\n### Instruction signatures\n\n```js\nimport { signatures } from \"@webassemblyjs/ast\";\n\nconsole.log(signatures);\n```\n\n### Path methods\n\n- `findParent: NodeLocator`\n- `replaceWith: Node => void`\n- `remove: () => void`\n- `insertBefore: Node => void`\n- `insertAfter: Node => void`\n- `stop: () => void`\n\n### AST utils\n\n- function `module(id, fields, metadata)`\n- function `moduleMetadata(sections, functionNames, localNames)`\n- function `moduleNameMetadata(value)`\n- function `functionNameMetadata(value, index)`\n- function `localNameMetadata(value, localIndex, functionIndex)`\n- function `binaryModule(id, blob)`\n- function `quoteModule(id, string)`\n- function `sectionMetadata(section, startOffset, size, vectorOfSize)`\n- function `loopInstruction(label, resulttype, instr)`\n- function `instruction(id, args, namedArgs)`\n- function `objectInstruction(id, object, args, namedArgs)`\n- function `ifInstruction(testLabel, test, result, consequent, alternate)`\n- function `stringLiteral(value)`\n- function `numberLiteralFromRaw(value, raw)`\n- function `longNumberLiteral(value, raw)`\n- function `floatLiteral(value, nan, inf, raw)`\n- function `elem(table, offset, funcs)`\n- function `indexInFuncSection(index)`\n- function `valtypeLiteral(name)`\n- function `typeInstruction(id, functype)`\n- function `start(index)`\n- function `globalType(valtype, mutability)`\n- function `leadingComment(value)`\n- function `blockComment(value)`\n- function `data(memoryIndex, offset, init)`\n- function `global(globalType, init, name)`\n- function `table(elementType, limits, name, elements)`\n- function `memory(limits, id)`\n- function `funcImportDescr(id, signature)`\n- function `moduleImport(module, name, descr)`\n- function `moduleExportDescr(exportType, id)`\n- function `moduleExport(name, descr)`\n- function `limit(min, max)`\n- function `signature(params, results)`\n- function `program(body)`\n- function `identifier(value, raw)`\n- function `blockInstruction(label, instr, result)`\n- function `callInstruction(index, instrArgs)`\n- function `callIndirectInstruction(signature, intrs)`\n- function `byteArray(values)`\n- function `func(name, signature, body, isExternal, metadata)`\n- Constant`isModule`\n- Constant`isModuleMetadata`\n- Constant`isModuleNameMetadata`\n- Constant`isFunctionNameMetadata`\n- Constant`isLocalNameMetadata`\n- Constant`isBinaryModule`\n- Constant`isQuoteModule`\n- Constant`isSectionMetadata`\n- Constant`isLoopInstruction`\n- Constant`isInstruction`\n- Constant`isObjectInstruction`\n- Constant`isIfInstruction`\n- Constant`isStringLiteral`\n- Constant`isNumberLiteral`\n- Constant`isLongNumberLiteral`\n- Constant`isFloatLiteral`\n- Constant`isElem`\n- Constant`isIndexInFuncSection`\n- Constant`isValtypeLiteral`\n- Constant`isTypeInstruction`\n- Constant`isStart`\n- Constant`isGlobalType`\n- Constant`isLeadingComment`\n- Constant`isBlockComment`\n- Constant`isData`\n- Constant`isGlobal`\n- Constant`isTable`\n- Constant`isMemory`\n- Constant`isFuncImportDescr`\n- Constant`isModuleImport`\n- Constant`isModuleExportDescr`\n- Constant`isModuleExport`\n- Constant`isLimit`\n- Constant`isSignature`\n- Constant`isProgram`\n- Constant`isIdentifier`\n- Constant`isBlockInstruction`\n- Constant`isCallInstruction`\n- Constant`isCallIndirectInstruction`\n- Constant`isByteArray`\n- Constant`isFunc`\n- Constant`assertModule`\n- Constant`assertModuleMetadata`\n- Constant`assertModuleNameMetadata`\n- Constant`assertFunctionNameMetadata`\n- Constant`assertLocalNameMetadata`\n- Constant`assertBinaryModule`\n- Constant`assertQuoteModule`\n- Constant`assertSectionMetadata`\n- Constant`assertLoopInstruction`\n- Constant`assertInstruction`\n- Constant`assertObjectInstruction`\n- Constant`assertIfInstruction`\n- Constant`assertStringLiteral`\n- Constant`assertNumberLiteral`\n- Constant`assertLongNumberLiteral`\n- Constant`assertFloatLiteral`\n- Constant`assertElem`\n- Constant`assertIndexInFuncSection`\n- Constant`assertValtypeLiteral`\n- Constant`assertTypeInstruction`\n- Constant`assertStart`\n- Constant`assertGlobalType`\n- Constant`assertLeadingComment`\n- Constant`assertBlockComment`\n- Constant`assertData`\n- Constant`assertGlobal`\n- Constant`assertTable`\n- Constant`assertMemory`\n- Constant`assertFuncImportDescr`\n- Constant`assertModuleImport`\n- Constant`assertModuleExportDescr`\n- Constant`assertModuleExport`\n- Constant`assertLimit`\n- Constant`assertSignature`\n- Constant`assertProgram`\n- Constant`assertIdentifier`\n- Constant`assertBlockInstruction`\n- Constant`assertCallInstruction`\n- Constant`assertCallIndirectInstruction`\n- Constant`assertByteArray`\n- Constant`assertFunc`\n\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/xtuc/webassemblyjs.git"
  },
  "version": "1.7.10"
}
